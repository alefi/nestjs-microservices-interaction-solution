// Style guide @see https://developers.google.com/protocol-buffers/docs/style and https://docs.buf.build/best-practices/style-guide

syntax = "proto3";

package game_service.v1;

import "shared/struct.proto";

service GameService {
  rpc ApplyBid(ApplyBidParamsDto) returns (GameBidDto) {}
  rpc BeginGameEvent(BeginGameEventParamsDto) returns (GameEventDto) {}
  rpc EndGameEvent(EndGameEventParamsDto) returns (GameEventDto) {}
  rpc GetGameEventById(GetGameEventParamsDto) returns (GameEventDto) {}
  rpc ListGameEvents(ListGameEventsParamsDto) returns (ListGameEventsDto) {}
  rpc ListGames(ListGamesParamsDto) returns (ListGamesDto) {}
}

message ApplyBidParamsDto {
  string game_session_id = 1;
  string user_id = 2;
  string value = 3; // To improve a development velocity, it is just a string.
  struct.v1.CurrencyAmountDto currency_amount = 4;
  optional string wallet_account_id = 5;
}

message BeginGameEventParamsDto {
  string game_id = 1;
  optional string name = 2;
  optional string display_name = 3;
  optional int32 default_session_duration_seconds = 4;
  optional int32 sessions_count_limit = 5;
  optional int32 simultaneous_sessions_count = 6;
  string start_at = 7;
  string finish_at = 8;
}

message EndGameEventParamsDto {
  string id = 1;
  string game_id = 2;
  optional string cancellation_reason = 3;
}

message GameBidDto {
  string id = 1;
  string game_session_id = 2;
  string wallet_entry_id = 3;
  string value_hash = 4; // Don't return this to a client.
  string status = 5;
  string created_at = 6;
  string updated_at = 7;
}

message GameEventDto {
  string id = 1;
  string game_id = 2;
  optional string name = 3;
  optional string display_name = 4;
  int32 default_session_duration_seconds = 5;
  optional int32 sessions_count_limit = 6;
  int32 simultaneous_sessions_count = 7;
  string start_at = 8;
  string finish_at = 9;
  optional string cancellation_reason = 10;
  bool is_cancelled = 11;
  bool is_finished = 12;
  string created_at = 13;
  string updated_at = 14;
}

message GameDto {
  string id = 1;
  string name = 2;
  optional string display_name = 3;
  int32 simultaneous_events_count = 4;
  bool is_available = 5;
  string created_at = 6;
  string updated_at = 7;
}

message GetGameEventParamsDto {
  string id = 1;
  string game_id = 2;
}

message ListGameEventsDto {
  // If items is empty, only total would be passed
  repeated GameEventDto items = 1;
  int32 total = 2;
}

message ListGameEventsParamsDto {
  optional string game_id = 1;
  optional bool is_finished = 2;
  // TODO add filtering range
}

message ListGamesDto {
  // If items is empty, only total would be passed
  repeated GameDto items = 1;
  int32 total = 2;
}

message ListGamesParamsDto {
  optional bool is_available = 1;
}
